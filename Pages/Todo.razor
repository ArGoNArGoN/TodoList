@page "/todo"

<h3>Todo (@todos.Count(todo => !todo.IsDone))</h3>

<ul>
    @foreach (var todo in todos)
    {
        <li>
            <input type="checkbox" @bind="todo.IsDone" />
            <input @bind="todo.Title" />
        </li>
    }
</ul>

<input placeholder="Something todo" @bind="newTodo" />
<button @onclick="AddTodo">Add todo</button>
<input placeholder="Введите номер задачи" @bind="IdEd" />
<input placeholder="Введите задачу" @bind="editToDo" />
<button @onclick="EditToDo">Edit</button>
<input placeholder="Введите номер задачи" @bind="Id" />

@code {
    private IList<TodoItem> todos = Program.TodoItems;
    private TasksResource Tasks { get; set; } = Program.Tasks;
    private String IdTasks { get; set; } = Program.IdTasks;
    private String newTodo;
    private String editToDo;
    private String IdEd;
    private String Id;

    public void Initialize()
    {

    }

    private void EditToDo(MouseEventArgs e)
    {
        if (!Int32.TryParse(IdEd, out Int32 id))
        {
            IdEd = "Ошибка!";
            return;
        }

        id -= 1;
        if (id < 0 || id >= todos.Count)
        {
            IdEd = "Id не найден";
            return;
        }

        var task = todos.ToList()[id];
        task.Title = editToDo;
        var a = Tasks.Update(new Google.Apis.Tasks.v1.Data.Task() { Title = task.Title, Id = task.ID }, IdTasks, task.ID).ExecuteAsync();
    }

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo });

            var t = Tasks.Insert(new Google.Apis.Tasks.v1.Data.Task() { Title = newTodo },
                IdTasks);

            try
            {
                t.Execute();
                newTodo = String.Empty;
            }
            catch (Exception e)
            {
                newTodo = e.Message;
            }
        }
    }
}
